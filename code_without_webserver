#include <Wire.h>
#include <SPI.h>
#include <MFRC522.h>
#include <LiquidCrystal_I2C.h>
#include <U8g2lib.h>

// OLED Setup (I2C)
U8G2_SSD1306_128X64_NONAME_F_HW_I2C oled(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

// LCD Setup (I2C)
LiquidCrystal_I2C lcd(0x27, 16, 2);

// RFID Setup
#define SS_PIN 5
#define RST_PIN 27
MFRC522 mfrc522(SS_PIN, RST_PIN);

// Buttons
#define ADD_BUTTON 13
#define REMOVE_BUTTON 12
#define TOTAL_BUTTON 14

int bill_amount = 0;
bool add_flag = true;
bool remove_flag = false;

unsigned long lastScanTime = 0;
const unsigned long scanCooldown = 1000;
unsigned long lastButtonTime = 0;
const unsigned long buttonCooldown = 300;

// QR Bitmap
const unsigned char epd_bitmap_qrcode_2 [] PROGMEM = {
  
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0x67, 0x0c, 0xfe, 0xc3, 0xff, 0x03, 
	0x80, 0xff, 0x67, 0x0c, 0xfe, 0xe3, 0xff, 0x03, 0x80, 0x01, 0x64, 0x93, 0xc7, 0x60, 0x00, 0x03, 
	0x80, 0x01, 0x64, 0x93, 0xc7, 0x60, 0x00, 0x03, 0x80, 0xf9, 0x84, 0xec, 0xc7, 0x64, 0x3e, 0x03, 
	0x80, 0xf9, 0xe4, 0x0f, 0x38, 0x63, 0x3e, 0x03, 0x80, 0xf9, 0xe4, 0x0f, 0x38, 0x63, 0x3e, 0x03, 
	0x80, 0xf9, 0x84, 0x7c, 0x00, 0x63, 0x3e, 0x03, 0x80, 0xf9, 0x84, 0x7c, 0x00, 0x63, 0x3e, 0x03, 
	0x80, 0x01, 0x84, 0xb0, 0x01, 0x67, 0x00, 0x03, 0x80, 0x01, 0x84, 0x90, 0x01, 0x6f, 0x00, 0x03, 
	0x80, 0xff, 0x67, 0x93, 0xc9, 0xec, 0xff, 0x03, 0x00, 0x00, 0x60, 0xef, 0xf1, 0x0c, 0x00, 0x00, 
	0x00, 0x00, 0x60, 0xef, 0xf1, 0x0c, 0x00, 0x00, 0x80, 0x39, 0x1f, 0xe3, 0xf9, 0x40, 0xc8, 0x01, 
	0x80, 0x39, 0x1f, 0xe3, 0xf9, 0x60, 0xc8, 0x03, 0x80, 0xcf, 0x60, 0x03, 0xfe, 0x7f, 0x06, 0x03, 
	0x00, 0xf0, 0x67, 0x13, 0xf7, 0xff, 0xe1, 0x00, 0x00, 0xf0, 0x67, 0x93, 0xe7, 0xfc, 0xf1, 0x00, 
	0x80, 0x37, 0x60, 0xff, 0xc7, 0x8c, 0x03, 0x01, 0x80, 0x37, 0x60, 0xff, 0xc7, 0x8c, 0x07, 0x03, 
	0x80, 0xf7, 0x67, 0x3f, 0x20, 0x03, 0x38, 0x00, 0x00, 0x80, 0x03, 0x70, 0x30, 0x07, 0xf0, 0x01, 
	0x00, 0x00, 0x03, 0x70, 0x30, 0x6f, 0xf0, 0x03, 0x00, 0xfe, 0x67, 0x80, 0x01, 0x73, 0xf2, 0x03, 
	0x00, 0xfe, 0x67, 0x80, 0x01, 0x73, 0xf6, 0x03, 0x80, 0x01, 0x98, 0x43, 0x08, 0xe3, 0xc7, 0x00, 
	0x80, 0x01, 0x98, 0x63, 0x18, 0xe3, 0xc7, 0x00, 0x80, 0xf7, 0xfc, 0x0f, 0x86, 0x1c, 0xcf, 0x00, 
	0x00, 0xe7, 0x47, 0x47, 0x8e, 0x9c, 0xfc, 0x00, 0x00, 0xc6, 0x03, 0x63, 0x0e, 0x8c, 0xf9, 0x00, 
	0x80, 0x21, 0xfc, 0x20, 0x2e, 0xfc, 0x37, 0x00, 0x80, 0x31, 0xfc, 0x10, 0x36, 0xfc, 0x37, 0x00, 
	0x00, 0x30, 0x03, 0x10, 0xf0, 0xf8, 0x31, 0x00, 0x00, 0x30, 0x03, 0x10, 0xf0, 0xf9, 0x31, 0x00, 
	0x00, 0xfe, 0x9c, 0x6f, 0xf0, 0xff, 0x3f, 0x00, 0x00, 0x7c, 0xd8, 0xef, 0xf0, 0xff, 0x3f, 0x00, 
	0x00, 0x00, 0xe0, 0xe0, 0xd9, 0x0f, 0xfe, 0x03, 0x00, 0xff, 0xe7, 0xe3, 0xf0, 0x0f, 0xfe, 0x00, 
	0x80, 0xff, 0x67, 0x43, 0xf0, 0x4f, 0xce, 0x00, 0x80, 0x01, 0x64, 0x0f, 0xc8, 0x0c, 0xce, 0x03, 
	0x80, 0x01, 0x64, 0x1f, 0xd8, 0x0c, 0xef, 0x01, 0x80, 0xf9, 0x84, 0x9f, 0xff, 0xfc, 0xf7, 0x00, 
	0x80, 0xf9, 0x84, 0x9f, 0xff, 0xfc, 0xf7, 0x00, 0x80, 0xf9, 0xe4, 0x80, 0xff, 0x9c, 0x0f, 0x03, 
	0x80, 0xf9, 0xe4, 0x80, 0x73, 0x9f, 0x11, 0x03, 0x80, 0xf9, 0xe4, 0x90, 0x21, 0x9f, 0x30, 0x01, 
	0x80, 0x01, 0x84, 0xe0, 0xc1, 0x0c, 0xc8, 0x00, 0x80, 0x01, 0x84, 0xc0, 0xc1, 0x0f, 0xc8, 0x00, 
	0x80, 0xff, 0x67, 0x03, 0xc0, 0x8f, 0xc7, 0x00, 0x80, 0xff, 0x47, 0x02, 0x80, 0x87, 0x43, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};


// Items
struct Item {
  String name;
  String uid;
  int price;
};

const int itemCount = 5;
Item items[itemCount] = {
  {"Milk", "A3 1A 64 29", 63},
  {"Eggs", "43 60 B8 27", 55},
  {"Butter", "13 12 C7 27", 60},
  {"Milk Bread", "93 AD BD 27", 21},
  {"Cookie", "62 FA 13 51", 100}
};

void setup() {
  Serial.begin(115200);
  SPI.begin();
  mfrc522.PCD_Init();

  Wire.begin();
  lcd.init();
  lcd.backlight();
  oled.begin();

  pinMode(ADD_BUTTON, INPUT);
  pinMode(REMOVE_BUTTON, INPUT);
  pinMode(TOTAL_BUTTON, INPUT);

  lcd.setCursor(0, 0);
  lcd.print("Welcome to");
  lcd.setCursor(0, 1);
  lcd.print("Smart Cart");
  delay(2000);
  lcd.clear();
}

void loop() {
  unsigned long currentTime = millis();

  if (digitalRead(ADD_BUTTON) && currentTime - lastButtonTime > buttonCooldown) {
    add_flag = true;
    remove_flag = false;
    displayLCD("Scan Item", "to ADD");
    lastButtonTime = currentTime;
  }

  if (digitalRead(REMOVE_BUTTON) && currentTime - lastButtonTime > buttonCooldown) {
    add_flag = false;
    remove_flag = true;
    displayLCD("Scan Item", "to REMOVE");
    lastButtonTime = currentTime;
  }

  if (digitalRead(TOTAL_BUTTON) && currentTime - lastButtonTime > buttonCooldown) {
    displayLCD("Total:", String(bill_amount) + " Rs");
    showQRCode();
    lastButtonTime = currentTime;
  }

  if (!mfrc522.PICC_IsNewCardPresent() || !mfrc522.PICC_ReadCardSerial()) return;
  if (millis() - lastScanTime < scanCooldown) return;
  lastScanTime = millis();

  String uidStr = "";
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    uidStr += (mfrc522.uid.uidByte[i] < 0x10 ? "0" : "") + String(mfrc522.uid.uidByte[i], HEX) + " ";
  }
  uidStr.trim();
  uidStr.toUpperCase();

  for (int i = 0; i < itemCount; i++) {
    if (uidStr == items[i].uid) {
      if (add_flag) bill_amount += items[i].price;
      else if (remove_flag && bill_amount >= items[i].price) bill_amount -= items[i].price;

      displayLCD(items[i].name, add_flag ? "Added" : "Removed");
      updateOLEDTotal();
      break;
    }
  }
}

void displayLCD(String line1, String line2) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(line1);
  lcd.setCursor(0, 1);
  lcd.print(line2);
}

void updateOLEDTotal() {
  oled.clearBuffer();
  oled.setFont(u8g2_font_ncenB08_tr);
  oled.drawStr(0, 24, "Total:");
  oled.setCursor(50, 24);
  oled.print(bill_amount);
  oled.sendBuffer();
}

void showQRCode() {
  oled.clearBuffer();
  oled.drawXBMP(32, 0, 64, 64, epd_bitmap_qrcode_2);
  oled.sendBuffer();
}
